		<div class="landing-container">
			<div class="left column">
				<div class="header">
					<p>Header</p>
					<p>
						"Dope quote"
					</p>
					<p>- Speaker</p>
				</div>
				<div class="link"><a href="#">For Hire</a></div>
			</div>
			<div class="right column">
        <div class="right-container">
          <div class="right-content">
            <div class="images">
              <div class="img-card">
                <div class="img-1 img"></div>
                <div class="img-content">
                  <h2>Gallery Header</h2>
                </div>
              </div>
              <div class="img-card">
                <div class="img-2 img"></div>
                <div class="img-content">
                  <h2>Gallery Header</h2>
                </div>
              </div>
              <div class="img-card">
                <div class="img-3 img"></div>
                <div class="img-content">
                  <h2>Gallery Header</h2>
                </div>
              </div>
              <div class="img-card">
                <div class="img-4 img"></div>
                <div class="img-content">
                  <h2>Gallery Header</h2>
                </div>
              </div>
            </div>
            <div class="header">
              <h1 class="ml12">Jean Grae</h1>
            </div>
          </div>
          <div class="right-social">
            <a href="https://github.com/Fire-Bringer"><i class="fa-brands fa-github"></i></a>
            <a href="https://www.linkedin.com/in/rashaddupaty/"><i class="fa-brands fa-linkedin"></i></a>
            <a href="https://www.instagram.com/rashad_dupaty/"><i class="fa-brands fa-instagram"></i></a>
          </div>
        </div>
			</div>
		</div>



		<script>
			// Wrap every letter in a span
			var textWrapper = document.querySelector(".ml12");
			textWrapper.innerHTML = textWrapper.textContent.replace(
				/\S/g,
				"<span class='letter'>$&</span>"
			);

			anime.timeline().add({
				targets: ".ml12 .letter",
				translateY: [100, 0],
				translateZ: 0,
				opacity: [0, 1],
				easing: "easeOutExpo",
				duration: 2000,
				delay: (el, i) => 2000 + 60 * i,
			});

			TweenMax.from(".left", 3, {
				left: "-50%",
				ease: Expo.easeInOut,
				delay: 3.4,
			});
			TweenMax.from(".header h1", 3, {
				left: "-140%",
				ease: Expo.easeInOut,
				delay: 3.4,
			});
			TweenMax.staggerFrom(
				".images > div",
				1,
				{
					y: "60",
					opacity: 0,
					ease: Power2.easeOut,
					delay: 6,
				},
				0.2
			);

			TweenMax.staggerFrom(
				".header > p",
				1,
				{
					y: "60",
					opacity: 0,
					ease: Power2.easeOut,
					delay: 5.6,
				},
				0.2
			);

			TweenMax.from(".link", 1, {
				opacity: 0,
				ease: SteppedEase.config(1),
				repeat: -1,
				repeatDelay: 0.2,
				delay: 7.8,
			});
		</script>
